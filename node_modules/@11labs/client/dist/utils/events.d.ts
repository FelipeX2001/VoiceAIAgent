export type UserTranscriptionEvent = {
    type: "user_transcript";
    user_transcription_event: {
        user_transcript: string;
    };
};
export type AgentResponseEvent = {
    type: "agent_response";
    agent_response_event: {
        agent_response: string;
    };
};
export type AudioEvent = {
    type: "audio";
    audio_event: {
        audio_base_64: string;
        event_id: number;
    };
};
export type InterruptionEvent = {
    type: "interruption";
    interruption_event: {
        event_id: number;
    };
};
export type InternalTentativeAgentResponseEvent = {
    type: "internal_tentative_agent_response";
    tentative_agent_response_internal_event: {
        tentative_agent_response: string;
    };
};
export type ConfigEvent = {
    type: "conversation_initiation_metadata";
    conversation_initiation_metadata_event: {
        conversation_id: string;
        agent_output_audio_format: string;
    };
};
export type PingEvent = {
    type: "ping";
    ping_event: {
        event_id: number;
        average_ping_ms?: number;
    };
};
export type SocketEvent = UserTranscriptionEvent | AgentResponseEvent | AudioEvent | InterruptionEvent | InternalTentativeAgentResponseEvent | ConfigEvent | PingEvent;
export declare function isValidSocketEvent(event: any): event is SocketEvent;
