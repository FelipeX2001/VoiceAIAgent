{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-aec00f0d25a7aa32.js","public/index.js","node_modules/@11labs/client/dist/lib.module.js","node_modules/@11labs/client/src/utils/audio.ts","node_modules/@11labs/client/src/utils/rawAudioProcessor.ts","node_modules/@11labs/client/src/utils/input.ts","node_modules/@11labs/client/src/utils/audioConcatProcessor.ts","node_modules/@11labs/client/src/utils/output.ts","node_modules/@11labs/client/src/utils/events.ts","node_modules/@11labs/client/src/utils/connection.ts","node_modules/@11labs/client/src/index.ts","node_modules/process/browser.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"c767fc22f18de3a7\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// index.js\r\n\r\nimport { Conversation } from \"@11labs/client\";\r\n\r\n// Obtener elementos del DOM\r\nconst botonIniciar = document.getElementById(\"iniciar\");\r\nconst botonTerminar = document.getElementById(\"terminar\");\r\nconst mensajesDiv = document.getElementById(\"mensajes\");\r\n\r\nlet conversation;\r\n\r\n// Función para agregar mensajes al contenedor\r\nfunction agregarMensaje(mensaje, tipo = \"default\") {\r\n  console.log(`Agregando mensaje: \"${mensaje}\" con tipo \"${tipo}\"`);\r\n  const p = document.createElement(\"p\");\r\n  p.textContent = mensaje;\r\n\r\n  // Asignar la clase basada en el tipo de mensaje\r\n  switch (tipo) {\r\n    case \"user\":\r\n      p.classList.add(\"user\");\r\n      break;\r\n    case \"agent\":\r\n      p.classList.add(\"agent\");\r\n      break;\r\n    case \"system\":\r\n      p.classList.add(\"system\");\r\n      break;\r\n    case \"error\":\r\n      p.classList.add(\"error\");\r\n      break;\r\n    case \"tentativo\":\r\n      p.classList.add(\"tentativo\");\r\n      break;\r\n    default:\r\n      p.classList.add(\"default\");\r\n      break;\r\n  }\r\n\r\n  mensajesDiv.appendChild(p);\r\n  mensajesDiv.scrollTop = mensajesDiv.scrollHeight; // Auto scroll\r\n}\r\n\r\n// Función para manejar mensajes tentativos\r\nfunction manejarMensajeTentativo(message) {\r\n  console.log(\"Manejando mensaje tentativo:\", message.text);\r\n  // Buscar si ya existe un mensaje tentativo para actualizarlo\r\n  let tentativo = mensajesDiv.querySelector(\".tentativo\");\r\n\r\n  if (!tentativo) {\r\n    tentativo = document.createElement(\"p\");\r\n    tentativo.classList.add(\"tentativo\");\r\n    tentativo.textContent = message.text;\r\n    mensajesDiv.appendChild(tentativo);\r\n    console.log(\"Mensaje tentativo creado:\", tentativo.textContent);\r\n  } else {\r\n    tentativo.textContent = message.text;\r\n    console.log(\"Mensaje tentativo actualizado:\", tentativo.textContent);\r\n  }\r\n\r\n  mensajesDiv.scrollTop = mensajesDiv.scrollHeight; // Auto scroll\r\n}\r\n\r\n// Manejar el clic en el botón de iniciar conversación\r\nbotonIniciar.addEventListener(\"click\", async () => {\r\n  try {\r\n    // Solicitar permiso para usar el micrófono\r\n    await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    console.log(\"Permiso de micrófono otorgado.\");\r\n\r\n    botonIniciar.disabled = true;\r\n    botonTerminar.disabled = false;\r\n\r\n    // Iniciar la conversación\r\n    conversation = await Conversation.startSession({\r\n      agentId: \"Kl90eWakGKseixCPuLaJ\", // Reemplaza con tu propio agentId\r\n      onConnect: () => {\r\n        console.log(\"Conectado al agente.\");\r\n        agregarMensaje(\"Conectado al agente.\", \"system\");\r\n      },\r\n      onDisconnect: () => {\r\n        console.log(\"Desconectado del agente.\");\r\n        agregarMensaje(\"Desconectado del agente.\", \"system\");\r\n      },\r\n      onMessage: (message) => {\r\n        console.log(\"Mensaje recibido:\", message);\r\n        if (message.isFinal) {\r\n          // Eliminar mensaje tentativo si existe\r\n          const tentativo = mensajesDiv.querySelector(\".tentativo\");\r\n          if (tentativo) {\r\n            tentativo.remove();\r\n            console.log(\"Mensaje tentativo eliminado.\");\r\n          }\r\n\r\n          if (message.isUser) {\r\n            agregarMensaje(`Tú: ${message.text}`, \"user\");\r\n            console.log(\"Mensaje de usuario agregado:\", message.text);\r\n          } else {\r\n            agregarMensaje(`Agente: ${message.text}`, \"agent\");\r\n            console.log(\"Mensaje del agente agregado:\", message.text);\r\n          }\r\n        } else {\r\n          // Manejar mensajes tentativos\r\n          manejarMensajeTentativo(message);\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        console.error(\"Error en la conversación:\", error);\r\n        agregarMensaje(`Error: ${error.message || error}`, \"error\");\r\n      },\r\n      onStatusChange: (status) => {\r\n        console.log(\"Status Change:\", status);\r\n        // Acceder a propiedades específicas del objeto status\r\n        const connected = status.connected ? \"Conectado\" : \"Desconectado\";\r\n        const details = status.details ? status.details : \"Sin detalles\";\r\n        agregarMensaje(`Estado de conexión: ${connected} - ${details}`, \"system\");\r\n      },\r\n      onModeChange: (mode) => {\r\n        console.log(\"Mode Change:\", mode);\r\n        // Acceder a propiedades específicas del objeto mode\r\n        const currentMode = mode.currentMode ? mode.currentMode : \"Desconocido\";\r\n        agregarMensaje(`Modo del agente: ${currentMode}`, \"system\");\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al iniciar la conversación:\", error);\r\n    agregarMensaje(`No se pudo iniciar la conversación: ${error.message || error}`, \"error\");\r\n  }\r\n});\r\n\r\n// Manejar el clic en el botón de terminar conversación\r\nbotonTerminar.addEventListener(\"click\", async () => {\r\n  if (conversation) {\r\n    try {\r\n      await conversation.endSession();\r\n      agregarMensaje(\"Sesión finalizada.\", \"system\");\r\n      console.log(\"Sesión finalizada.\");\r\n    } catch (error) {\r\n      console.error(\"Error al terminar la sesión:\", error);\r\n      agregarMensaje(`Error al terminar la sesión: ${error.message || error}`, \"error\");\r\n    } finally {\r\n      botonIniciar.disabled = false;\r\n      botonTerminar.disabled = true;\r\n    }\r\n  }\r\n});\r\n\r\n\r\n",null,"export function arrayBufferToBase64(b: ArrayBufferLike) {\n  const buffer = new Uint8Array(b);\n  // @ts-ignore\n  const base64Data = window.btoa(String.fromCharCode(...buffer));\n  return base64Data;\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n","const blob = new Blob(\n  [\n    `\n      const TARGET_SAMPLE_RATE = 16000;\n      class RawAudioProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n          this.buffer = []; // Initialize an empty buffer\n          this.bufferSize = TARGET_SAMPLE_RATE / 4; // Define the threshold for buffer size to be ~0.25s\n\n          if (globalThis.LibSampleRate && sampleRate !== TARGET_SAMPLE_RATE) {\n            globalThis.LibSampleRate.create(1, sampleRate, TARGET_SAMPLE_RATE).then(resampler => {\n              this.resampler = resampler;\n            });\n          }\n        }\n        process(inputs, outputs) {\n          const input = inputs[0]; // Get the first input node\n          if (input.length > 0) {\n            let channelData = input[0]; // Get the first channel's data\n\n            // Resample the audio if necessary\n            if (this.resampler) {\n              channelData = this.resampler.full(channelData);\n            }\n\n            // Add channel data to the buffer\n            this.buffer.push(...channelData);\n            // Get max volume \n            let sum = 0.0;\n            for (let i = 0; i < channelData.length; i++) {\n              sum += channelData[i] * channelData[i];\n            }\n            const maxVolume = Math.sqrt(sum / channelData.length);\n            // Check if buffer size has reached or exceeded the threshold\n            if (this.buffer.length >= this.bufferSize) {\n              const float32Array = new Float32Array(this.buffer)\n              let pcm16Array = new Int16Array(float32Array.length);\n\n              // Iterate through the Float32Array and convert each sample to PCM16\n              for (let i = 0; i < float32Array.length; i++) {\n                // Clamp the value to the range [-1, 1]\n                let sample = Math.max(-1, Math.min(1, float32Array[i]));\n            \n                // Scale the sample to the range [-32768, 32767] and store it in the Int16Array\n                pcm16Array[i] = sample < 0 ? sample * 32768 : sample * 32767;\n              }\n            \n              // Send the buffered data to the main script\n              this.port.postMessage([pcm16Array, maxVolume]);\n            \n              // Clear the buffer after sending\n              this.buffer = [];\n            }\n          }\n          return true; // Continue processing\n        }\n      }\n      registerProcessor(\"raw-audio-processor\", RawAudioProcessor);\n  `,\n  ],\n  { type: \"application/javascript\" }\n);\n\nexport const rawAudioProcessor = URL.createObjectURL(blob);\n","import { rawAudioProcessor } from \"./rawAudioProcessor\";\n\nconst LIBSAMPLERATE_JS =\n  \"https://cdn.jsdelivr.net/npm/@alexanderolsen/libsamplerate-js@2.1.2/dist/libsamplerate.worklet.js\";\n\nexport class Input {\n  public static async create(sampleRate: number): Promise<Input> {\n    let context: AudioContext | null = null;\n    let inputStream: MediaStream | null = null;\n\n    try {\n      const supportsSampleRateConstraint =\n        navigator.mediaDevices.getSupportedConstraints().sampleRate;\n\n      context = new window.AudioContext(\n        supportsSampleRateConstraint ? { sampleRate } : {}\n      );\n      const analyser = context.createAnalyser();\n      if (!supportsSampleRateConstraint) {\n        await context.audioWorklet.addModule(LIBSAMPLERATE_JS);\n      }\n      await context.audioWorklet.addModule(rawAudioProcessor);\n\n      inputStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          sampleRate: { ideal: sampleRate },\n          echoCancellation: { ideal: true },\n        },\n      });\n\n      const source = context.createMediaStreamSource(inputStream);\n      const worklet = new AudioWorkletNode(context, \"raw-audio-processor\");\n\n      source.connect(analyser);\n      analyser.connect(worklet);\n\n      return new Input(context, analyser, worklet, inputStream);\n    } catch (error) {\n      inputStream?.getTracks().forEach(track => track.stop());\n      context?.close();\n      throw error;\n    }\n  }\n\n  private constructor(\n    public readonly context: AudioContext,\n    public readonly analyser: AnalyserNode,\n    public readonly worklet: AudioWorkletNode,\n    public readonly inputStream: MediaStream\n  ) {}\n\n  public async close() {\n    this.inputStream.getTracks().forEach(track => track.stop());\n    await this.context.close();\n  }\n}\n","const blob = new Blob(\n  [\n    `\n      class AudioConcatProcessor extends AudioWorkletProcessor {\n        constructor() {\n          super();\n          this.buffers = []; // Initialize an empty buffer\n          this.cursor = 0;\n          this.currentBuffer = null;\n          this.wasInterrupted = false;\n          this.finished = false;\n\n          this.port.onmessage = ({ data }) => {\n            switch (data.type) {\n              case \"buffer\":\n                this.wasInterrupted = false;\n                this.buffers.push(new Int16Array(data.buffer));\n                break;\n              case \"interrupt\":\n                this.wasInterrupted = true;\n                break;\n              case \"clearInterrupted\":\n                if (this.wasInterrupted) {\n                  this.wasInterrupted = false;\n                  this.buffers = [];\n                  this.currentBuffer = null;\n                }\n            }\n          };\n        }\n        process(_, outputs) {\n          let finished = false;\n          const output = outputs[0][0];\n          for (let i = 0; i < output.length; i++) {\n            if (!this.currentBuffer) {\n              if (this.buffers.length === 0) {\n                finished = true;\n                break;\n              }\n              this.currentBuffer = this.buffers.shift();\n              this.cursor = 0;\n            }\n\n            output[i] = this.currentBuffer[this.cursor] / 32768;\n            this.cursor++;\n\n            if (this.cursor >= this.currentBuffer.length) {\n              this.currentBuffer = null;\n            }\n          }\n\n          if (this.finished !== finished) {\n            this.finished = finished;\n            this.port.postMessage({ type: \"process\", finished });\n          }\n\n          return true; // Continue processing\n        }\n      }\n\n      registerProcessor(\"audio-concat-processor\", AudioConcatProcessor);\n    `,\n  ],\n  { type: \"application/javascript\" }\n);\n\nexport const audioConcatProcessor = URL.createObjectURL(blob);\n","import { audioConcatProcessor } from \"./audioConcatProcessor\";\n\nexport class Output {\n  public static async create(sampleRate: number): Promise<Output> {\n    let context: AudioContext | null = null;\n    try {\n      context = new AudioContext({ sampleRate });\n      const analyser = context.createAnalyser();\n      const gain = context.createGain();\n      gain.connect(analyser);\n      analyser.connect(context.destination);\n      await context.audioWorklet.addModule(audioConcatProcessor);\n      const worklet = new AudioWorkletNode(context, \"audio-concat-processor\");\n      worklet.connect(gain);\n\n      return new Output(context, analyser, gain, worklet);\n    } catch (error) {\n      context?.close();\n      throw error;\n    }\n  }\n\n  private constructor(\n    public readonly context: AudioContext,\n    public readonly analyser: AnalyserNode,\n    public readonly gain: GainNode,\n    public readonly worklet: AudioWorkletNode\n  ) {}\n\n  public async close() {\n    await this.context.close();\n  }\n}\n","export type UserTranscriptionEvent = {\n  type: \"user_transcript\";\n  user_transcription_event: { user_transcript: string };\n};\nexport type AgentResponseEvent = {\n  type: \"agent_response\";\n  agent_response_event: { agent_response: string };\n};\nexport type AudioEvent = {\n  type: \"audio\";\n  audio_event: {\n    audio_base_64: string;\n    event_id: number;\n  };\n};\nexport type InterruptionEvent = {\n  type: \"interruption\";\n  interruption_event: {\n    event_id: number;\n  };\n};\nexport type InternalTentativeAgentResponseEvent = {\n  type: \"internal_tentative_agent_response\";\n  tentative_agent_response_internal_event: {\n    tentative_agent_response: string;\n  };\n};\nexport type ConfigEvent = {\n  type: \"conversation_initiation_metadata\";\n  conversation_initiation_metadata_event: {\n    conversation_id: string;\n    agent_output_audio_format: string;\n  };\n};\nexport type PingEvent = {\n  type: \"ping\";\n  ping_event: {\n    event_id: number;\n    average_ping_ms?: number;\n  };\n};\n\n// TODO correction missing\nexport type SocketEvent =\n  | UserTranscriptionEvent\n  | AgentResponseEvent\n  | AudioEvent\n  | InterruptionEvent\n  | InternalTentativeAgentResponseEvent\n  | ConfigEvent\n  | PingEvent;\n\nexport function isValidSocketEvent(event: any): event is SocketEvent {\n  return !!event.type;\n}\n","import { ConfigEvent, isValidSocketEvent } from \"./events\";\n\ndeclare const process: {\n  env: {\n    ELEVENLABS_CONVAI_SERVER_ORIGIN?: string;\n    ELEVENLABS_CONVAI_SERVER_PATHNAME?: string;\n  };\n};\n\nexport type SessionConfig =\n  | { signedUrl: string; agentId?: undefined }\n  | { agentId: string; signedUrl?: undefined };\n\nconst WSS_API_ORIGIN = \"wss://api.elevenlabs.io\";\nconst WSS_API_PATHNAME = \"/v1/convai/conversation?agent_id=\";\n\nexport class Connection {\n  public static async create(config: SessionConfig): Promise<Connection> {\n    let socket: WebSocket | null = null;\n\n    try {\n      const origin =\n        (typeof process !== \"undefined\"\n          ? process.env.ELEVENLABS_CONVAI_SERVER_ORIGIN\n          : null) ?? WSS_API_ORIGIN;\n\n      const pathname =\n        (typeof process !== \"undefined\"\n          ? process.env.ELEVENLABS_CONVAI_SERVER_PATHNAME\n          : null) ?? WSS_API_PATHNAME;\n\n      const url = config.signedUrl\n        ? config.signedUrl\n        : origin + pathname + config.agentId;\n\n      socket = new WebSocket(url);\n      const conversationConfig = await new Promise<\n        ConfigEvent[\"conversation_initiation_metadata_event\"]\n      >((resolve, reject) => {\n        socket!.addEventListener(\"error\", reject);\n        socket!.addEventListener(\"close\", reject);\n        socket!.addEventListener(\n          \"message\",\n          (event: MessageEvent) => {\n            const message = JSON.parse(event.data);\n\n            if (!isValidSocketEvent(message)) {\n              return;\n            }\n\n            if (message.type === \"conversation_initiation_metadata\") {\n              resolve(message.conversation_initiation_metadata_event);\n            } else {\n              console.warn(\n                \"First received message is not conversation metadata.\"\n              );\n            }\n          },\n          { once: true }\n        );\n      });\n\n      const conversationId = conversationConfig.conversation_id;\n      const sampleRate = parseInt(\n        conversationConfig.agent_output_audio_format.replace(\"pcm_\", \"\")\n      );\n\n      return new Connection(socket, conversationId, sampleRate);\n    } catch (error) {\n      socket?.close();\n      throw error;\n    }\n  }\n\n  private constructor(\n    public readonly socket: WebSocket,\n    public readonly conversationId: string,\n    public readonly sampleRate: number\n  ) {}\n\n  public close() {\n    this.socket.close();\n  }\n}\n","import { arrayBufferToBase64, base64ToArrayBuffer } from \"./utils/audio\";\nimport { Input } from \"./utils/input\";\nimport { Output } from \"./utils/output\";\nimport { Connection, SessionConfig } from \"./utils/connection\";\nimport { isValidSocketEvent, PingEvent } from \"./utils/events\";\n\nexport type { SocketEvent } from \"./utils/events\";\nexport type { SessionConfig } from \"./utils/connection\";\n\nexport type Role = \"user\" | \"ai\";\nexport type Mode = \"speaking\" | \"listening\";\nexport type Status =\n  | \"connecting\"\n  | \"connected\"\n  | \"disconnecting\"\n  | \"disconnected\";\nexport type Options = SessionConfig & Callbacks;\nexport type Callbacks = {\n  onConnect: (props: { conversationId: string }) => void;\n  onDisconnect: () => void;\n  onMessage: (props: { message: string; source: Role }) => void;\n  // internal debug events, not to be used\n  onDebug: (props: any) => void;\n  onError: (message: string, context?: any) => void;\n  onStatusChange: (prop: { status: Status }) => void;\n  onModeChange: (prop: { mode: Mode }) => void;\n};\n\nconst DEFAULT_SAMPLE_RATE = 16000;\n\nconst defaultCallbacks: Callbacks = {\n  onConnect: () => {},\n  onDisconnect: () => {},\n  onError: () => {},\n  onDebug: () => {},\n  onMessage: () => {},\n  onStatusChange: () => {},\n  onModeChange: () => {},\n};\n\nexport class Conversation {\n  public static async startSession(\n    options: SessionConfig & Partial<Callbacks>\n  ): Promise<Conversation> {\n    const fullOptions: Options = {\n      ...defaultCallbacks,\n      ...options,\n    };\n\n    fullOptions.onStatusChange({ status: \"connecting\" });\n\n    let input: Input | null = null;\n    let connection: Connection | null = null;\n    let output: Output | null = null;\n\n    try {\n      input = await Input.create(DEFAULT_SAMPLE_RATE);\n      connection = await Connection.create(options);\n      output = await Output.create(connection.sampleRate);\n\n      return new Conversation(fullOptions, connection, input, output);\n    } catch (error) {\n      fullOptions.onStatusChange({ status: \"disconnected\" });\n      connection?.close();\n      await input?.close();\n      await output?.close();\n      throw error;\n    }\n  }\n\n  private lastInterruptTimestamp: number = 0;\n  private mode: Mode = \"listening\";\n  private status: Status = \"connecting\";\n  private inputFrequencyData?: Uint8Array;\n  private outputFrequencyData?: Uint8Array;\n  private volume: number = 1;\n\n  private constructor(\n    private readonly options: Options,\n    private readonly connection: Connection,\n    public readonly input: Input,\n    public readonly output: Output\n  ) {\n    this.options.onConnect({ conversationId: connection.conversationId });\n\n    this.connection.socket.addEventListener(\"message\", event => {\n      this.onEvent(event);\n    });\n    this.connection.socket.addEventListener(\"error\", event => {\n      this.updateStatus(\"disconnected\");\n      this.onError(\"Socket error\", event);\n    });\n    this.connection.socket.addEventListener(\"close\", () => {\n      this.updateStatus(\"disconnected\");\n      this.options.onDisconnect();\n    });\n\n    this.input.worklet.port.onmessage = this.onInputWorkletMessage;\n    this.output.worklet.port.onmessage = this.onOutputWorkletMessage;\n    this.updateStatus(\"connected\");\n  }\n\n  public endSession = async () => {\n    if (this.status !== \"connected\") return;\n    this.updateStatus(\"disconnecting\");\n\n    this.connection.close();\n    await this.input.close();\n    await this.output.close();\n\n    this.updateStatus(\"disconnected\");\n  };\n\n  private updateMode = (mode: Mode) => {\n    if (mode !== this.mode) {\n      this.mode = mode;\n      this.options.onModeChange({ mode });\n    }\n  };\n\n  private updateStatus = (status: Status) => {\n    if (status !== this.status) {\n      this.status = status;\n      this.options.onStatusChange({ status });\n    }\n  };\n\n  private onEvent = (event: MessageEvent) => {\n    try {\n      const parsedEvent = JSON.parse(event.data);\n\n      if (!isValidSocketEvent(parsedEvent)) {\n        return;\n      }\n\n      switch (parsedEvent.type) {\n        case \"interruption\": {\n          if (parsedEvent.interruption_event) {\n            this.lastInterruptTimestamp =\n              parsedEvent.interruption_event.event_id;\n          }\n          this.fadeOutAudio();\n          break;\n        }\n\n        case \"agent_response\": {\n          this.options.onMessage({\n            source: \"ai\",\n            message: parsedEvent.agent_response_event.agent_response,\n          });\n          break;\n        }\n\n        case \"user_transcript\": {\n          this.options.onMessage({\n            source: \"user\",\n            message: parsedEvent.user_transcription_event.user_transcript,\n          });\n          break;\n        }\n\n        case \"internal_tentative_agent_response\": {\n          this.options.onDebug({\n            type: \"tentative_agent_response\",\n            response:\n              parsedEvent.tentative_agent_response_internal_event\n                .tentative_agent_response,\n          });\n          break;\n        }\n\n        case \"audio\": {\n          if (\n            this.lastInterruptTimestamp <= parsedEvent.audio_event.event_id!\n          ) {\n            this.addAudioBase64Chunk(parsedEvent.audio_event.audio_base_64);\n            this.updateMode(\"speaking\");\n          }\n          break;\n        }\n\n        case \"ping\": {\n          this.connection.socket.send(\n            JSON.stringify({\n              type: \"pong\",\n              event_id: (parsedEvent as PingEvent).ping_event.event_id,\n            })\n          );\n          // parsedEvent.ping_event.average_ping_ms can be used on client side, for\n          // example to warn if ping is too high that experience might be degraded.\n          break;\n        }\n\n        // unhandled events are expected to be internal events\n        default: {\n          this.options.onDebug(parsedEvent);\n          break;\n        }\n      }\n    } catch {\n      this.onError(\"Failed to parse event data\", { event });\n      return;\n    }\n  };\n\n  private onInputWorkletMessage = (event: MessageEvent): void => {\n    const rawAudioPcmData = event.data[0];\n    const maxVolume = event.data[1];\n\n    // check if the sound was loud enough, so we don't send unnecessary chunks\n    // then forward audio to websocket\n    //if (maxVolume > 0.001) {\n    const audioMessage = JSON.stringify({\n      user_audio_chunk: arrayBufferToBase64(rawAudioPcmData.buffer),\n      //sample_rate: this.inputAudioContext?.inputSampleRate || this.inputSampleRate,\n    });\n    if (this.status === \"connected\") {\n      this.connection.socket.send(audioMessage);\n    }\n    //}\n  };\n\n  private onOutputWorkletMessage = ({ data }: MessageEvent): void => {\n    if (data.type === \"process\") {\n      this.updateMode(data.finished ? \"listening\" : \"speaking\");\n    }\n  };\n\n  private addAudioBase64Chunk = async (chunk: string) => {\n    this.output.gain.gain.value = this.volume;\n    this.output.worklet.port.postMessage({ type: \"clearInterrupted\" });\n    this.output.worklet.port.postMessage({\n      type: \"buffer\",\n      buffer: base64ToArrayBuffer(chunk),\n    });\n  };\n\n  private fadeOutAudio = async () => {\n    // mute agent\n    this.updateMode(\"listening\");\n    this.output.worklet.port.postMessage({ type: \"interrupt\" });\n    this.output.gain.gain.exponentialRampToValueAtTime(\n      0.0001,\n      this.output.context.currentTime + 2\n    );\n\n    // reset volume back\n    setTimeout(() => {\n      this.output.gain.gain.value = this.volume;\n      this.output.worklet.port.postMessage({ type: \"clearInterrupted\" });\n    }, 2000); // Adjust the duration as needed\n  };\n\n  private onError = (message: string, context?: any) => {\n    console.error(message, context);\n    this.options.onError(message, context);\n  };\n\n  private calculateVolume = (frequencyData: Uint8Array) => {\n    if (frequencyData.length === 0) {\n      return 0;\n    }\n\n    // TODO: Currently this averages all frequencies, but we should probably\n    // bias towards the frequencies that are more typical for human voice\n    let volume = 0;\n    for (let i = 0; i < frequencyData.length; i++) {\n      volume += frequencyData[i] / 255;\n    }\n    volume /= frequencyData.length;\n\n    return volume < 0 ? 0 : volume > 1 ? 1 : volume;\n  };\n\n  public getId = () => this.connection.conversationId;\n\n  public setVolume = ({ volume }: { volume: number }) => {\n    this.volume = volume;\n  };\n\n  public getInputByteFrequencyData = () => {\n    this.inputFrequencyData ??= new Uint8Array(\n      this.input.analyser.frequencyBinCount\n    );\n    this.input.analyser.getByteFrequencyData(this.inputFrequencyData);\n    return this.inputFrequencyData;\n  };\n\n  public getOutputByteFrequencyData = () => {\n    this.outputFrequencyData ??= new Uint8Array(\n      this.output.analyser.frequencyBinCount\n    );\n    this.output.analyser.getByteFrequencyData(this.outputFrequencyData);\n    return this.outputFrequencyData;\n  };\n\n  public getInputVolume = () => {\n    return this.calculateVolume(this.getInputByteFrequencyData());\n  };\n\n  public getOutputVolume = () => {\n    return this.calculateVolume(this.getOutputByteFrequencyData());\n  };\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["base64ToArrayBuffer","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","blob","Blob","type","rawAudioProcessor","URL","createObjectURL","Input","context","analyser","worklet","inputStream","this","create","sampleRate","Promise","resolve","_temp2","audioWorklet","addModule","then","navigator","mediaDevices","getUserMedia","audio","ideal","echoCancellation","_navigator$mediaDevic","source","createMediaStreamSource","AudioWorkletNode","connect","supportsSampleRateConstraint","getSupportedConstraints","AudioContext","createAnalyser","_temp","_catch","error","_inputStream","_context","getTracks","forEach","track","stop","close","e","reject","_proto","prototype","audioConcatProcessor","Output","gain","createGain","destination","isValidSocketEvent","event","Connection","socket","conversationId","config","origin","_ref","process","env","ELEVENLABS_CONVAI_SERVER_ORIGIN","pathname","_ref2","ELEVENLABS_CONVAI_SERVER_PATHNAME","WebSocket","signedUrl","agentId","addEventListener","message","JSON","parse","data","conversation_initiation_metadata_event","console","warn","once","conversationConfig","conversation_id","parseInt","agent_output_audio_format","replace","_socket","defaultCallbacks","onConnect","onDisconnect","onError","onDebug","onMessage","onStatusChange","onModeChange","Conversation","options","connection","input","output","_this2","_this","_this3","_this4","lastInterruptTimestamp","mode","status","inputFrequencyData","outputFrequencyData","volume","endSession","updateStatus","updateMode","onEvent","parsedEvent","interruption_event","event_id","fadeOutAudio","agent_response_event","agent_response","user_transcription_event","user_transcript","response","tentative_agent_response_internal_event","tentative_agent_response","audio_event","addAudioBase64Chunk","audio_base_64","send","stringify","ping_event","_unused","onInputWorkletMessage","b","audioMessage","user_audio_chunk","btoa","String","fromCharCode","apply","onOutputWorkletMessage","finished","chunk","value","port","postMessage","exponentialRampToValueAtTime","currentTime","setTimeout","calculateVolume","frequencyData","getId","setVolume","getInputByteFrequencyData","frequencyBinCount","getByteFrequencyData","getOutputByteFrequencyData","getInputVolume","getOutputVolume","onmessage","startSession","fullOptions","_extends","_Input$create","_Connection$create","_Output$create","_connection","_input","_output"],"version":3,"file":"index.f18de3a7.js.map","sourceRoot":"/__parcel_source_root/"}