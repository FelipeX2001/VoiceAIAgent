{"mappings":";;AAAA,WAAW;;AAIX,4BAA4B;AAC5B,MAAM,qCAAe,SAAS,cAAc,CAAC;AAC7C,MAAM,sCAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,oCAAc,SAAS,cAAc,CAAC;AAE5C,IAAI;AAEJ,8CAA8C;AAC9C,SAAS,qCAAe,OAAO,EAAE,OAAO,SAAS;IAC/C,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,QAAQ,YAAY,EAAE,KAAK,CAAC,CAAC;IAChE,MAAM,IAAI,SAAS,aAAa,CAAC;IACjC,EAAE,WAAW,GAAG;IAEhB,gDAAgD;IAChD,OAAQ;QACN,KAAK;YACH,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;QACF,KAAK;YACH,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;QACF,KAAK;YACH,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;QACF,KAAK;YACH,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;QACF,KAAK;YACH,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;QACF;YACE,EAAE,SAAS,CAAC,GAAG,CAAC;YAChB;IACJ;IAEA,kCAAY,WAAW,CAAC;IACxB,kCAAY,SAAS,GAAG,kCAAY,YAAY,EAAE,cAAc;AAClE;AAEA,2CAA2C;AAC3C,SAAS,8CAAwB,OAAO;IACtC,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,IAAI;IACxD,6DAA6D;IAC7D,IAAI,YAAY,kCAAY,aAAa,CAAC;IAE1C,IAAI,CAAC,WAAW;QACd,YAAY,SAAS,aAAa,CAAC;QACnC,UAAU,SAAS,CAAC,GAAG,CAAC;QACxB,UAAU,WAAW,GAAG,QAAQ,IAAI;QACpC,kCAAY,WAAW,CAAC;QACxB,QAAQ,GAAG,CAAC,6BAA6B,UAAU,WAAW;IAChE,OAAO;QACL,UAAU,WAAW,GAAG,QAAQ,IAAI;QACpC,QAAQ,GAAG,CAAC,kCAAkC,UAAU,WAAW;IACrE;IAEA,kCAAY,SAAS,GAAG,kCAAY,YAAY,EAAE,cAAc;AAClE;AAEA,sDAAsD;AACtD,mCAAa,gBAAgB,CAAC,SAAS;IACrC,IAAI;QACF,2CAA2C;QAC3C,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;YAAE,OAAO;QAAK;QACxD,QAAQ,GAAG,CAAC;QAEZ,mCAAa,QAAQ,GAAG;QACxB,oCAAc,QAAQ,GAAG;QAEzB,0BAA0B;QAC1B,qCAAe,MAAM,CAAA,GAAA,gCAAW,EAAE,YAAY,CAAC;YAC7C,SAAS;YACT,WAAW;gBACT,QAAQ,GAAG,CAAC;gBACZ,qCAAe,wBAAwB;YACzC;YACA,cAAc;gBACZ,QAAQ,GAAG,CAAC;gBACZ,qCAAe,4BAA4B;YAC7C;YACA,WAAW,CAAC;gBACV,QAAQ,GAAG,CAAC,qBAAqB;gBACjC,IAAI,QAAQ,OAAO,EAAE;oBACnB,uCAAuC;oBACvC,MAAM,YAAY,kCAAY,aAAa,CAAC;oBAC5C,IAAI,WAAW;wBACb,UAAU,MAAM;wBAChB,QAAQ,GAAG,CAAC;oBACd;oBAEA,IAAI,QAAQ,MAAM,EAAE;wBAClB,qCAAe,CAAC,OAAI,EAAE,QAAQ,IAAI,CAAC,CAAC,EAAE;wBACtC,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,IAAI;oBAC1D,OAAO;wBACL,qCAAe,CAAC,QAAQ,EAAE,QAAQ,IAAI,CAAC,CAAC,EAAE;wBAC1C,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,IAAI;oBAC1D;gBACF,OACE,8BAA8B;gBAC9B,8CAAwB;YAE5B;YACA,SAAS,CAAC;gBACR,QAAQ,KAAK,CAAC,gCAA6B;gBAC3C,qCAAe,CAAC,OAAO,EAAE,MAAM,OAAO,IAAI,MAAM,CAAC,EAAE;YACrD;YACA,gBAAgB,CAAC;gBACf,QAAQ,GAAG,CAAC,kBAAkB;gBAC9B,sDAAsD;gBACtD,MAAM,YAAY,OAAO,SAAS,GAAG,cAAc;gBACnD,MAAM,UAAU,OAAO,OAAO,GAAG,OAAO,OAAO,GAAG;gBAClD,qCAAe,CAAC,uBAAoB,EAAE,UAAU,GAAG,EAAE,QAAQ,CAAC,EAAE;YAClE;YACA,cAAc,CAAC;gBACb,QAAQ,GAAG,CAAC,gBAAgB;gBAC5B,oDAAoD;gBACpD,MAAM,cAAc,KAAK,WAAW,GAAG,KAAK,WAAW,GAAG;gBAC1D,qCAAe,CAAC,iBAAiB,EAAE,YAAY,CAAC,EAAE;YACpD;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAqC;QACnD,qCAAe,CAAC,uCAAoC,EAAE,MAAM,OAAO,IAAI,MAAM,CAAC,EAAE;IAClF;AACF;AAEA,uDAAuD;AACvD,oCAAc,gBAAgB,CAAC,SAAS;IACtC,IAAI,oCACF,IAAI;QACF,MAAM,mCAAa,UAAU;QAC7B,qCAAe,yBAAsB;QACrC,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAgC;QAC9C,qCAAe,CAAC,gCAA6B,EAAE,MAAM,OAAO,IAAI,MAAM,CAAC,EAAE;IAC3E,SAAU;QACR,mCAAa,QAAQ,GAAG;QACxB,oCAAc,QAAQ,GAAG;IAC3B;AAEJ","sources":["public/index.js"],"sourcesContent":["// index.js\r\n\r\nimport { Conversation } from \"@11labs/client\";\r\n\r\n// Obtener elementos del DOM\r\nconst botonIniciar = document.getElementById(\"iniciar\");\r\nconst botonTerminar = document.getElementById(\"terminar\");\r\nconst mensajesDiv = document.getElementById(\"mensajes\");\r\n\r\nlet conversation;\r\n\r\n// Función para agregar mensajes al contenedor\r\nfunction agregarMensaje(mensaje, tipo = \"default\") {\r\n  console.log(`Agregando mensaje: \"${mensaje}\" con tipo \"${tipo}\"`);\r\n  const p = document.createElement(\"p\");\r\n  p.textContent = mensaje;\r\n\r\n  // Asignar la clase basada en el tipo de mensaje\r\n  switch (tipo) {\r\n    case \"user\":\r\n      p.classList.add(\"user\");\r\n      break;\r\n    case \"agent\":\r\n      p.classList.add(\"agent\");\r\n      break;\r\n    case \"system\":\r\n      p.classList.add(\"system\");\r\n      break;\r\n    case \"error\":\r\n      p.classList.add(\"error\");\r\n      break;\r\n    case \"tentativo\":\r\n      p.classList.add(\"tentativo\");\r\n      break;\r\n    default:\r\n      p.classList.add(\"default\");\r\n      break;\r\n  }\r\n\r\n  mensajesDiv.appendChild(p);\r\n  mensajesDiv.scrollTop = mensajesDiv.scrollHeight; // Auto scroll\r\n}\r\n\r\n// Función para manejar mensajes tentativos\r\nfunction manejarMensajeTentativo(message) {\r\n  console.log(\"Manejando mensaje tentativo:\", message.text);\r\n  // Buscar si ya existe un mensaje tentativo para actualizarlo\r\n  let tentativo = mensajesDiv.querySelector(\".tentativo\");\r\n\r\n  if (!tentativo) {\r\n    tentativo = document.createElement(\"p\");\r\n    tentativo.classList.add(\"tentativo\");\r\n    tentativo.textContent = message.text;\r\n    mensajesDiv.appendChild(tentativo);\r\n    console.log(\"Mensaje tentativo creado:\", tentativo.textContent);\r\n  } else {\r\n    tentativo.textContent = message.text;\r\n    console.log(\"Mensaje tentativo actualizado:\", tentativo.textContent);\r\n  }\r\n\r\n  mensajesDiv.scrollTop = mensajesDiv.scrollHeight; // Auto scroll\r\n}\r\n\r\n// Manejar el clic en el botón de iniciar conversación\r\nbotonIniciar.addEventListener(\"click\", async () => {\r\n  try {\r\n    // Solicitar permiso para usar el micrófono\r\n    await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    console.log(\"Permiso de micrófono otorgado.\");\r\n\r\n    botonIniciar.disabled = true;\r\n    botonTerminar.disabled = false;\r\n\r\n    // Iniciar la conversación\r\n    conversation = await Conversation.startSession({\r\n      agentId: \"Kl90eWakGKseixCPuLaJ\", // Reemplaza con tu propio agentId\r\n      onConnect: () => {\r\n        console.log(\"Conectado al agente.\");\r\n        agregarMensaje(\"Conectado al agente.\", \"system\");\r\n      },\r\n      onDisconnect: () => {\r\n        console.log(\"Desconectado del agente.\");\r\n        agregarMensaje(\"Desconectado del agente.\", \"system\");\r\n      },\r\n      onMessage: (message) => {\r\n        console.log(\"Mensaje recibido:\", message);\r\n        if (message.isFinal) {\r\n          // Eliminar mensaje tentativo si existe\r\n          const tentativo = mensajesDiv.querySelector(\".tentativo\");\r\n          if (tentativo) {\r\n            tentativo.remove();\r\n            console.log(\"Mensaje tentativo eliminado.\");\r\n          }\r\n\r\n          if (message.isUser) {\r\n            agregarMensaje(`Tú: ${message.text}`, \"user\");\r\n            console.log(\"Mensaje de usuario agregado:\", message.text);\r\n          } else {\r\n            agregarMensaje(`Agente: ${message.text}`, \"agent\");\r\n            console.log(\"Mensaje del agente agregado:\", message.text);\r\n          }\r\n        } else {\r\n          // Manejar mensajes tentativos\r\n          manejarMensajeTentativo(message);\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        console.error(\"Error en la conversación:\", error);\r\n        agregarMensaje(`Error: ${error.message || error}`, \"error\");\r\n      },\r\n      onStatusChange: (status) => {\r\n        console.log(\"Status Change:\", status);\r\n        // Acceder a propiedades específicas del objeto status\r\n        const connected = status.connected ? \"Conectado\" : \"Desconectado\";\r\n        const details = status.details ? status.details : \"Sin detalles\";\r\n        agregarMensaje(`Estado de conexión: ${connected} - ${details}`, \"system\");\r\n      },\r\n      onModeChange: (mode) => {\r\n        console.log(\"Mode Change:\", mode);\r\n        // Acceder a propiedades específicas del objeto mode\r\n        const currentMode = mode.currentMode ? mode.currentMode : \"Desconocido\";\r\n        agregarMensaje(`Modo del agente: ${currentMode}`, \"system\");\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error al iniciar la conversación:\", error);\r\n    agregarMensaje(`No se pudo iniciar la conversación: ${error.message || error}`, \"error\");\r\n  }\r\n});\r\n\r\n// Manejar el clic en el botón de terminar conversación\r\nbotonTerminar.addEventListener(\"click\", async () => {\r\n  if (conversation) {\r\n    try {\r\n      await conversation.endSession();\r\n      agregarMensaje(\"Sesión finalizada.\", \"system\");\r\n      console.log(\"Sesión finalizada.\");\r\n    } catch (error) {\r\n      console.error(\"Error al terminar la sesión:\", error);\r\n      agregarMensaje(`Error al terminar la sesión: ${error.message || error}`, \"error\");\r\n    } finally {\r\n      botonIniciar.disabled = false;\r\n      botonTerminar.disabled = true;\r\n    }\r\n  }\r\n});\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.js.map"}